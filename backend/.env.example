# ==============================================================================
# Customer Support AI Agent - Environment Configuration
# ==============================================================================
# Copy this file to .env and update with your actual values
# DO NOT commit .env file to version control
# ==============================================================================

# -----------------------------------------------------------------------------
# Application Settings
# -----------------------------------------------------------------------------

# Application name (used in logs and monitoring)
APP_NAME="Customer Support AI Agent"

# Application version
APP_VERSION="1.0.0"

# Environment: development, testing, staging, production
ENVIRONMENT="development"

# Enable debug mode (verbose logging, debug endpoints)
# Automatically set to true in development, false in production
DEBUG="false"

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL="INFO"

# -----------------------------------------------------------------------------
# API Configuration
# -----------------------------------------------------------------------------

# API server host (0.0.0.0 for all interfaces)
API_HOST="0.0.0.0"

# API server port
API_PORT="8000"

# API route prefix
API_PREFIX="/api"

# Number of worker processes (1 for development, auto-scaled in production)
API_WORKERS="1"

# CORS allowed origins (comma-separated)
CORS_ORIGINS="http://localhost:3000,http://localhost:3001"

# Allow credentials in CORS requests
CORS_ALLOW_CREDENTIALS="true"

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------

# Secret key for JWT and encryption (auto-generated if not set)
# IMPORTANT: Set a strong secret key in production!
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=""

# JWT configuration
JWT_ALGORITHM="HS256"
JWT_EXPIRATION_HOURS="24"

# API key header name
API_KEY_HEADER="X-API-Key"

# Enable session data encryption
ENCRYPT_SESSIONS="true"

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------

# Primary database URL
# SQLite (development): sqlite:///./data/customer_support.db
# PostgreSQL (production): postgresql://user:password@localhost:5432/dbname
DATABASE_URL="sqlite:///./data/customer_support.db"

# Database settings
DATABASE_ECHO="false"
DATABASE_POOL_SIZE="10"
DATABASE_POOL_OVERFLOW="20"
DATABASE_POOL_TIMEOUT="30"

# -----------------------------------------------------------------------------
# Redis Cache Configuration
# -----------------------------------------------------------------------------

# Redis connection URL
REDIS_URL="redis://localhost:6379/0"

# Redis password (if required)
# REDIS_PASSWORD=""

# Redis settings
REDIS_POOL_SIZE="10"
REDIS_TTL="3600"
CACHE_ENABLED="true"

# -----------------------------------------------------------------------------
# ChromaDB Vector Store Configuration
# -----------------------------------------------------------------------------

# ChromaDB persistence directory
CHROMA_PERSIST_DIRECTORY="./data/chroma_db"

# ChromaDB collection name
CHROMA_COLLECTION_NAME="customer_support_docs"

# Distance function: ip (inner product), l2, cosine
CHROMA_DISTANCE_FUNCTION="ip"

# -----------------------------------------------------------------------------
# AI/ML Configuration
# -----------------------------------------------------------------------------

# AI provider: openai, azure_openai, local
AI_PROVIDER="openai"

# === OpenAI Configuration ===
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=""

# OpenAI organization ID (optional)
# OPENAI_ORGANIZATION=""

# Custom OpenAI API base URL (optional, for proxies)
# OPENAI_API_BASE=""

# === Azure OpenAI Configuration ===
# Azure OpenAI endpoint (required if using Azure)
# AZURE_OPENAI_ENDPOINT="https://your-resource.openai.azure.com/"

# Azure OpenAI API key
# AZURE_OPENAI_API_KEY=""

# Azure OpenAI deployment name
# AZURE_OPENAI_DEPLOYMENT="your-deployment"

# Azure OpenAI API version
AZURE_OPENAI_API_VERSION="2024-10-01-preview"

# === Model Configuration ===

# LLM model for agent responses
AGENT_MODEL="gpt-4o-mini"

# Temperature for response generation (0.0-2.0)
AGENT_TEMPERATURE="0.7"

# Maximum tokens in agent response
AGENT_MAX_TOKENS="2000"

# Agent response timeout in seconds
AGENT_TIMEOUT="30"

# Maximum retries for failed API calls
AGENT_MAX_RETRIES="3"

# === Embedding Configuration ===

# Embedding model (fallback if EmbeddingGemma unavailable)
EMBEDDING_MODEL="sentence-transformers/all-MiniLM-L6-v2"

# Google EmbeddingGemma model
EMBEDDING_GEMMA_MODEL="google/embedding-gemma-256m-it"

# Embedding vector dimension
EMBEDDING_DIMENSION="768"

# Batch size for embedding generation
EMBEDDING_BATCH_SIZE="32"

# Use GPU for embeddings (requires CUDA)
USE_GPU_EMBEDDINGS="false"

# -----------------------------------------------------------------------------
# RAG (Retrieval-Augmented Generation) Configuration
# -----------------------------------------------------------------------------

# Enable RAG functionality
RAG_ENABLED="true"

# Chunking settings
RAG_CHUNK_SIZE="500"
RAG_CHUNK_OVERLAP="50"

# Search settings
RAG_SEARCH_K="5"
RAG_SIMILARITY_THRESHOLD="0.7"
RAG_RERANK_ENABLED="false"

# -----------------------------------------------------------------------------
# Memory Configuration
# -----------------------------------------------------------------------------

# Enable conversation memory
MEMORY_ENABLED="true"

# Memory limits
MEMORY_MAX_ENTRIES="100"
MEMORY_TTL_HOURS="24"
MEMORY_CLEANUP_DAYS="30"

# -----------------------------------------------------------------------------
# File Handling Configuration
# -----------------------------------------------------------------------------

# Maximum file upload size in bytes (10MB)
MAX_FILE_SIZE="10485760"

# Allowed file extensions (comma-separated)
ALLOWED_FILE_TYPES=".pdf,.doc,.docx,.txt,.md,.csv,.xlsx,.xls,.json,.xml,.jpg,.jpeg,.png,.gif,.bmp,.mp3,.wav,.m4a"

# Upload directory
UPLOAD_DIRECTORY="./data/uploads"

# Process uploads asynchronously
PROCESS_UPLOADS_ASYNC="true"

# -----------------------------------------------------------------------------
# Rate Limiting Configuration
# -----------------------------------------------------------------------------

# Enable rate limiting
RATE_LIMIT_ENABLED="true"

# Rate limit settings
RATE_LIMIT_REQUESTS="100"
RATE_LIMIT_PERIOD="60"
RATE_LIMIT_BURST="10"

# -----------------------------------------------------------------------------
# Monitoring & Telemetry
# -----------------------------------------------------------------------------

# Enable telemetry collection
TELEMETRY_ENABLED="true"

# Enable Prometheus metrics
METRICS_ENABLED="true"
METRICS_PORT="9090"

# OpenTelemetry collector endpoint (optional)
# OTLP_ENDPOINT="http://localhost:4317"
OTLP_SERVICE_NAME="customer-support-ai"

# Sentry error tracking DSN (optional)
# SENTRY_DSN="https://your-key@sentry.io/project-id"

# -----------------------------------------------------------------------------
# WebSocket Configuration
# -----------------------------------------------------------------------------

# Enable WebSocket support
WEBSOCKET_ENABLED="true"

# WebSocket settings
WEBSOCKET_PING_INTERVAL="30"
WEBSOCKET_PING_TIMEOUT="10"
WEBSOCKET_MAX_CONNECTIONS="1000"

# -----------------------------------------------------------------------------
# Session Configuration
# -----------------------------------------------------------------------------

# Session settings
SESSION_TIMEOUT_MINUTES="30"
SESSION_MAX_MESSAGES="1000"
SESSION_CLEANUP_HOURS="24"

# -----------------------------------------------------------------------------
# Escalation Configuration
# -----------------------------------------------------------------------------

# Enable escalation to human support
ESCALATION_ENABLED="true"

# Escalation settings
ESCALATION_CONFIDENCE_THRESHOLD="0.7"
ESCALATION_KEYWORDS="urgent,emergency,legal,complaint,manager"

# Escalation notifications (optional)
# ESCALATION_NOTIFICATION_EMAIL="support@example.com"
# ESCALATION_WEBHOOK_URL="https://hooks.slack.com/services/YOUR/WEBHOOK/URL"

# -----------------------------------------------------------------------------
# Feature Flags
# -----------------------------------------------------------------------------

# Enable/disable features
FEATURE_VOICE_INPUT="false"
FEATURE_MULTILINGUAL="false"
FEATURE_ANALYTICS="false"
FEATURE_EXPORT_CHAT="true"
FEATURE_FILE_PREVIEW="true"

# -----------------------------------------------------------------------------
# Development Settings (Only for development/testing)
# -----------------------------------------------------------------------------

# Development features
DEV_AUTO_RELOAD="false"
DEV_SAMPLE_DATA="false"
DEV_MOCK_AI="false"
DEV_SLOW_MODE="false"

# ==============================================================================
# End of Configuration
# ==============================================================================
